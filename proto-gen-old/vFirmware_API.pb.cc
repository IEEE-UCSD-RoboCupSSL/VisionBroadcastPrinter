// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: vFirmware_API.proto

#include "vFirmware_API.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_vFirmware_5fAPI_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_vFirmware_5fAPI_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Vec_2D;
}  // namespace protobuf_vFirmware_5fAPI_2eproto
class Vec_2DDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Vec_2D>
      _instance;
} _Vec_2D_default_instance_;
class VF_CommandsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VF_Commands>
      _instance;
} _VF_Commands_default_instance_;
class VF_DataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VF_Data>
      _instance;
} _VF_Data_default_instance_;
namespace protobuf_vFirmware_5fAPI_2eproto {
static void InitDefaultsVec_2D() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Vec_2D_default_instance_;
    new (ptr) ::Vec_2D();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Vec_2D::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Vec_2D =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVec_2D}, {}};

static void InitDefaultsVF_Commands() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_VF_Commands_default_instance_;
    new (ptr) ::VF_Commands();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::VF_Commands::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_VF_Commands =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsVF_Commands}, {
      &protobuf_vFirmware_5fAPI_2eproto::scc_info_Vec_2D.base,}};

static void InitDefaultsVF_Data() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_VF_Data_default_instance_;
    new (ptr) ::VF_Data();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::VF_Data::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_VF_Data =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsVF_Data}, {
      &protobuf_vFirmware_5fAPI_2eproto::scc_info_Vec_2D.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Vec_2D.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VF_Commands.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VF_Data.base);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Vec_2D, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Vec_2D, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Vec_2D, y_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VF_Commands, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VF_Commands, init_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VF_Commands, translational_output_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VF_Commands, rotational_output_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VF_Commands, kicker_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VF_Commands, dribbler_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VF_Data, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VF_Data, translational_displacement_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VF_Data, translational_velocity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VF_Data, rotational_displacement_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VF_Data, rotational_velocity_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Vec_2D)},
  { 7, -1, sizeof(::VF_Commands)},
  { 17, -1, sizeof(::VF_Data)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Vec_2D_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_VF_Commands_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_VF_Data_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "vFirmware_API.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023vFirmware_API.proto\"\036\n\006Vec_2D\022\t\n\001x\030\001 \001"
      "(\002\022\t\n\001y\030\002 \001(\002\"\210\001\n\013VF_Commands\022\014\n\004init\030\001 "
      "\001(\010\022%\n\024translational_output\030\002 \001(\0132\007.Vec_"
      "2D\022\031\n\021rotational_output\030\003 \001(\002\022\027\n\006kicker\030"
      "\004 \001(\0132\007.Vec_2D\022\020\n\010dribbler\030\005 \001(\010\"\235\001\n\007VF_"
      "Data\022+\n\032translational_displacement\030\001 \001(\013"
      "2\007.Vec_2D\022\'\n\026translational_velocity\030\002 \001("
      "\0132\007.Vec_2D\022\037\n\027rotational_displacement\030\003 "
      "\001(\002\022\033\n\023rotational_velocity\030\004 \001(\002b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 360);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "vFirmware_API.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_vFirmware_5fAPI_2eproto

// ===================================================================

void Vec_2D::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vec_2D::kXFieldNumber;
const int Vec_2D::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vec_2D::Vec_2D()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vFirmware_5fAPI_2eproto::scc_info_Vec_2D.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Vec_2D)
}
Vec_2D::Vec_2D(const Vec_2D& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:Vec_2D)
}

void Vec_2D::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
}

Vec_2D::~Vec_2D() {
  // @@protoc_insertion_point(destructor:Vec_2D)
  SharedDtor();
}

void Vec_2D::SharedDtor() {
}

void Vec_2D::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Vec_2D::descriptor() {
  ::protobuf_vFirmware_5fAPI_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vFirmware_5fAPI_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Vec_2D& Vec_2D::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vFirmware_5fAPI_2eproto::scc_info_Vec_2D.base);
  return *internal_default_instance();
}


void Vec_2D::Clear() {
// @@protoc_insertion_point(message_clear_start:Vec_2D)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
  _internal_metadata_.Clear();
}

bool Vec_2D::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Vec_2D)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Vec_2D)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Vec_2D)
  return false;
#undef DO_
}

void Vec_2D::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Vec_2D)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // float y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Vec_2D)
}

::google::protobuf::uint8* Vec_2D::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Vec_2D)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // float y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Vec_2D)
  return target;
}

size_t Vec_2D::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Vec_2D)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float x = 1;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float y = 2;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Vec_2D::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Vec_2D)
  GOOGLE_DCHECK_NE(&from, this);
  const Vec_2D* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Vec_2D>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Vec_2D)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Vec_2D)
    MergeFrom(*source);
  }
}

void Vec_2D::MergeFrom(const Vec_2D& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Vec_2D)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
}

void Vec_2D::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Vec_2D)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vec_2D::CopyFrom(const Vec_2D& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Vec_2D)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vec_2D::IsInitialized() const {
  return true;
}

void Vec_2D::Swap(Vec_2D* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vec_2D::InternalSwap(Vec_2D* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Vec_2D::GetMetadata() const {
  protobuf_vFirmware_5fAPI_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vFirmware_5fAPI_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VF_Commands::InitAsDefaultInstance() {
  ::_VF_Commands_default_instance_._instance.get_mutable()->translational_output_ = const_cast< ::Vec_2D*>(
      ::Vec_2D::internal_default_instance());
  ::_VF_Commands_default_instance_._instance.get_mutable()->kicker_ = const_cast< ::Vec_2D*>(
      ::Vec_2D::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VF_Commands::kInitFieldNumber;
const int VF_Commands::kTranslationalOutputFieldNumber;
const int VF_Commands::kRotationalOutputFieldNumber;
const int VF_Commands::kKickerFieldNumber;
const int VF_Commands::kDribblerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VF_Commands::VF_Commands()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vFirmware_5fAPI_2eproto::scc_info_VF_Commands.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:VF_Commands)
}
VF_Commands::VF_Commands(const VF_Commands& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_translational_output()) {
    translational_output_ = new ::Vec_2D(*from.translational_output_);
  } else {
    translational_output_ = NULL;
  }
  if (from.has_kicker()) {
    kicker_ = new ::Vec_2D(*from.kicker_);
  } else {
    kicker_ = NULL;
  }
  ::memcpy(&rotational_output_, &from.rotational_output_,
    static_cast<size_t>(reinterpret_cast<char*>(&dribbler_) -
    reinterpret_cast<char*>(&rotational_output_)) + sizeof(dribbler_));
  // @@protoc_insertion_point(copy_constructor:VF_Commands)
}

void VF_Commands::SharedCtor() {
  ::memset(&translational_output_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dribbler_) -
      reinterpret_cast<char*>(&translational_output_)) + sizeof(dribbler_));
}

VF_Commands::~VF_Commands() {
  // @@protoc_insertion_point(destructor:VF_Commands)
  SharedDtor();
}

void VF_Commands::SharedDtor() {
  if (this != internal_default_instance()) delete translational_output_;
  if (this != internal_default_instance()) delete kicker_;
}

void VF_Commands::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VF_Commands::descriptor() {
  ::protobuf_vFirmware_5fAPI_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vFirmware_5fAPI_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VF_Commands& VF_Commands::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vFirmware_5fAPI_2eproto::scc_info_VF_Commands.base);
  return *internal_default_instance();
}


void VF_Commands::Clear() {
// @@protoc_insertion_point(message_clear_start:VF_Commands)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && translational_output_ != NULL) {
    delete translational_output_;
  }
  translational_output_ = NULL;
  if (GetArenaNoVirtual() == NULL && kicker_ != NULL) {
    delete kicker_;
  }
  kicker_ = NULL;
  ::memset(&rotational_output_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dribbler_) -
      reinterpret_cast<char*>(&rotational_output_)) + sizeof(dribbler_));
  _internal_metadata_.Clear();
}

bool VF_Commands::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:VF_Commands)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool init = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &init_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Vec_2D translational_output = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_translational_output()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float rotational_output = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rotational_output_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Vec_2D kicker = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_kicker()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool dribbler = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &dribbler_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:VF_Commands)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:VF_Commands)
  return false;
#undef DO_
}

void VF_Commands::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:VF_Commands)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool init = 1;
  if (this->init() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->init(), output);
  }

  // .Vec_2D translational_output = 2;
  if (this->has_translational_output()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_translational_output(), output);
  }

  // float rotational_output = 3;
  if (this->rotational_output() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->rotational_output(), output);
  }

  // .Vec_2D kicker = 4;
  if (this->has_kicker()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_kicker(), output);
  }

  // bool dribbler = 5;
  if (this->dribbler() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->dribbler(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:VF_Commands)
}

::google::protobuf::uint8* VF_Commands::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:VF_Commands)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool init = 1;
  if (this->init() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->init(), target);
  }

  // .Vec_2D translational_output = 2;
  if (this->has_translational_output()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_translational_output(), deterministic, target);
  }

  // float rotational_output = 3;
  if (this->rotational_output() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->rotational_output(), target);
  }

  // .Vec_2D kicker = 4;
  if (this->has_kicker()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_kicker(), deterministic, target);
  }

  // bool dribbler = 5;
  if (this->dribbler() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->dribbler(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:VF_Commands)
  return target;
}

size_t VF_Commands::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:VF_Commands)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .Vec_2D translational_output = 2;
  if (this->has_translational_output()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *translational_output_);
  }

  // .Vec_2D kicker = 4;
  if (this->has_kicker()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *kicker_);
  }

  // float rotational_output = 3;
  if (this->rotational_output() != 0) {
    total_size += 1 + 4;
  }

  // bool init = 1;
  if (this->init() != 0) {
    total_size += 1 + 1;
  }

  // bool dribbler = 5;
  if (this->dribbler() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VF_Commands::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:VF_Commands)
  GOOGLE_DCHECK_NE(&from, this);
  const VF_Commands* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VF_Commands>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:VF_Commands)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:VF_Commands)
    MergeFrom(*source);
  }
}

void VF_Commands::MergeFrom(const VF_Commands& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:VF_Commands)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_translational_output()) {
    mutable_translational_output()->::Vec_2D::MergeFrom(from.translational_output());
  }
  if (from.has_kicker()) {
    mutable_kicker()->::Vec_2D::MergeFrom(from.kicker());
  }
  if (from.rotational_output() != 0) {
    set_rotational_output(from.rotational_output());
  }
  if (from.init() != 0) {
    set_init(from.init());
  }
  if (from.dribbler() != 0) {
    set_dribbler(from.dribbler());
  }
}

void VF_Commands::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:VF_Commands)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VF_Commands::CopyFrom(const VF_Commands& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:VF_Commands)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VF_Commands::IsInitialized() const {
  return true;
}

void VF_Commands::Swap(VF_Commands* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VF_Commands::InternalSwap(VF_Commands* other) {
  using std::swap;
  swap(translational_output_, other->translational_output_);
  swap(kicker_, other->kicker_);
  swap(rotational_output_, other->rotational_output_);
  swap(init_, other->init_);
  swap(dribbler_, other->dribbler_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VF_Commands::GetMetadata() const {
  protobuf_vFirmware_5fAPI_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vFirmware_5fAPI_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VF_Data::InitAsDefaultInstance() {
  ::_VF_Data_default_instance_._instance.get_mutable()->translational_displacement_ = const_cast< ::Vec_2D*>(
      ::Vec_2D::internal_default_instance());
  ::_VF_Data_default_instance_._instance.get_mutable()->translational_velocity_ = const_cast< ::Vec_2D*>(
      ::Vec_2D::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VF_Data::kTranslationalDisplacementFieldNumber;
const int VF_Data::kTranslationalVelocityFieldNumber;
const int VF_Data::kRotationalDisplacementFieldNumber;
const int VF_Data::kRotationalVelocityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VF_Data::VF_Data()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vFirmware_5fAPI_2eproto::scc_info_VF_Data.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:VF_Data)
}
VF_Data::VF_Data(const VF_Data& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_translational_displacement()) {
    translational_displacement_ = new ::Vec_2D(*from.translational_displacement_);
  } else {
    translational_displacement_ = NULL;
  }
  if (from.has_translational_velocity()) {
    translational_velocity_ = new ::Vec_2D(*from.translational_velocity_);
  } else {
    translational_velocity_ = NULL;
  }
  ::memcpy(&rotational_displacement_, &from.rotational_displacement_,
    static_cast<size_t>(reinterpret_cast<char*>(&rotational_velocity_) -
    reinterpret_cast<char*>(&rotational_displacement_)) + sizeof(rotational_velocity_));
  // @@protoc_insertion_point(copy_constructor:VF_Data)
}

void VF_Data::SharedCtor() {
  ::memset(&translational_displacement_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rotational_velocity_) -
      reinterpret_cast<char*>(&translational_displacement_)) + sizeof(rotational_velocity_));
}

VF_Data::~VF_Data() {
  // @@protoc_insertion_point(destructor:VF_Data)
  SharedDtor();
}

void VF_Data::SharedDtor() {
  if (this != internal_default_instance()) delete translational_displacement_;
  if (this != internal_default_instance()) delete translational_velocity_;
}

void VF_Data::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VF_Data::descriptor() {
  ::protobuf_vFirmware_5fAPI_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vFirmware_5fAPI_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VF_Data& VF_Data::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vFirmware_5fAPI_2eproto::scc_info_VF_Data.base);
  return *internal_default_instance();
}


void VF_Data::Clear() {
// @@protoc_insertion_point(message_clear_start:VF_Data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && translational_displacement_ != NULL) {
    delete translational_displacement_;
  }
  translational_displacement_ = NULL;
  if (GetArenaNoVirtual() == NULL && translational_velocity_ != NULL) {
    delete translational_velocity_;
  }
  translational_velocity_ = NULL;
  ::memset(&rotational_displacement_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rotational_velocity_) -
      reinterpret_cast<char*>(&rotational_displacement_)) + sizeof(rotational_velocity_));
  _internal_metadata_.Clear();
}

bool VF_Data::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:VF_Data)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Vec_2D translational_displacement = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_translational_displacement()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Vec_2D translational_velocity = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_translational_velocity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float rotational_displacement = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rotational_displacement_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float rotational_velocity = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rotational_velocity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:VF_Data)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:VF_Data)
  return false;
#undef DO_
}

void VF_Data::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:VF_Data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Vec_2D translational_displacement = 1;
  if (this->has_translational_displacement()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_translational_displacement(), output);
  }

  // .Vec_2D translational_velocity = 2;
  if (this->has_translational_velocity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_translational_velocity(), output);
  }

  // float rotational_displacement = 3;
  if (this->rotational_displacement() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->rotational_displacement(), output);
  }

  // float rotational_velocity = 4;
  if (this->rotational_velocity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->rotational_velocity(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:VF_Data)
}

::google::protobuf::uint8* VF_Data::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:VF_Data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Vec_2D translational_displacement = 1;
  if (this->has_translational_displacement()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_translational_displacement(), deterministic, target);
  }

  // .Vec_2D translational_velocity = 2;
  if (this->has_translational_velocity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_translational_velocity(), deterministic, target);
  }

  // float rotational_displacement = 3;
  if (this->rotational_displacement() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->rotational_displacement(), target);
  }

  // float rotational_velocity = 4;
  if (this->rotational_velocity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->rotational_velocity(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:VF_Data)
  return target;
}

size_t VF_Data::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:VF_Data)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .Vec_2D translational_displacement = 1;
  if (this->has_translational_displacement()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *translational_displacement_);
  }

  // .Vec_2D translational_velocity = 2;
  if (this->has_translational_velocity()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *translational_velocity_);
  }

  // float rotational_displacement = 3;
  if (this->rotational_displacement() != 0) {
    total_size += 1 + 4;
  }

  // float rotational_velocity = 4;
  if (this->rotational_velocity() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VF_Data::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:VF_Data)
  GOOGLE_DCHECK_NE(&from, this);
  const VF_Data* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VF_Data>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:VF_Data)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:VF_Data)
    MergeFrom(*source);
  }
}

void VF_Data::MergeFrom(const VF_Data& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:VF_Data)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_translational_displacement()) {
    mutable_translational_displacement()->::Vec_2D::MergeFrom(from.translational_displacement());
  }
  if (from.has_translational_velocity()) {
    mutable_translational_velocity()->::Vec_2D::MergeFrom(from.translational_velocity());
  }
  if (from.rotational_displacement() != 0) {
    set_rotational_displacement(from.rotational_displacement());
  }
  if (from.rotational_velocity() != 0) {
    set_rotational_velocity(from.rotational_velocity());
  }
}

void VF_Data::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:VF_Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VF_Data::CopyFrom(const VF_Data& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:VF_Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VF_Data::IsInitialized() const {
  return true;
}

void VF_Data::Swap(VF_Data* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VF_Data::InternalSwap(VF_Data* other) {
  using std::swap;
  swap(translational_displacement_, other->translational_displacement_);
  swap(translational_velocity_, other->translational_velocity_);
  swap(rotational_displacement_, other->rotational_displacement_);
  swap(rotational_velocity_, other->rotational_velocity_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VF_Data::GetMetadata() const {
  protobuf_vFirmware_5fAPI_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vFirmware_5fAPI_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Vec_2D* Arena::CreateMaybeMessage< ::Vec_2D >(Arena* arena) {
  return Arena::CreateInternal< ::Vec_2D >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::VF_Commands* Arena::CreateMaybeMessage< ::VF_Commands >(Arena* arena) {
  return Arena::CreateInternal< ::VF_Commands >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::VF_Data* Arena::CreateMaybeMessage< ::VF_Data >(Arena* arena) {
  return Arena::CreateInternal< ::VF_Data >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
